#include <InetConstants.au3>
#include <MsgBoxConstants.au3>
#include <WinAPIFiles.au3>

Example()

Func Example()
    ; Define the URL of the file to be downloaded.
    Local $sURL = "http://www.autoitscript.com/autoit3/files/beta/update.dat"
    
    ; Get the file name from the URL.
    Local $sFileName = GetFileNameFromURL($sURL)
    
    ; Define the path to the Downloads directory.
    Local $sDownloadDir = @UserProfileDir & "\Downloads\"
    
    ; Define the full file path to save the downloaded file.
    Local $sFilePath = $sDownloadDir & $sFileName

    ; Download the file in the background with the selected option of 'force a reload from the remote site.'
    Local $hDownload = InetGet($sURL, $sFilePath, $INET_FORCERELOAD, $INET_DOWNLOADBACKGROUND)

    ; Wait for the download to complete by monitoring when the 2nd index value of InetGetInfo returns True.
    Do
        Sleep(250)
    Until InetGetInfo($hDownload, $INET_DOWNLOADCOMPLETE)

    ; Retrieve the number of total bytes received and the filesize.
    Local $iBytesSize = InetGetInfo($hDownload, $INET_DOWNLOADREAD)
    Local $iFileSize = FileGetSize($sFilePath)

    ; Close the handle returned by InetGet.
    InetClose($hDownload)

    ; Display details about the total number of bytes read and the filesize.
    MsgBox($MB_SYSTEMMODAL, "", "The total download size: " & $iBytesSize & @CRLF & _
                    "The total filesize: " & $iFileSize)
EndFunc   ;==>Example

; Function to extract the file name from the URL
Func GetFileNameFromURL($sURL)
    ; Find the last occurrence of "/" in the URL
    Local $iLastSlashPos = StringInStr($sURL, "/", 0, -1)
    ; Extract the file name using StringTrimLeft
    Local $sFileName = StringTrimLeft($sURL, $iLastSlashPos)
    Return $sFileName
EndFunc
